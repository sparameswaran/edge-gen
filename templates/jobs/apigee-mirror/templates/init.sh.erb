#!/bin/bash
export APIGEE_HOME=/opt/apigee
set +e -x

<%
  # Another option is to use spec.address
  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
  my_ip = discover_external_ip
%>


# Not relying on network name to arrive at hostip
# Set the ip to HOSTNAME to avoid listener getting bound to some internal only hostname

# DONT CHANGE THESE VARIABLE Names - used by apigee scripts
export LOCAL_HOSTIP=<%= my_ip %>
export MIRROR_HTTP_PORT=<%= properties.mirror_port %>
export MIRROR_USERNAME=<%= properties.mirror_username %>
export MIRROR_PASSWORD=<%= properties.mirror_password %>
export BOOTSTRAP_VERSION=<%= properties.bootstrap_version %>

export RUN_DIR=/var/vcap/sys/run
export LOG_DIR=/var/vcap/sys/log/apigee-mirror
export DEBUG_LOG=$LOG_DIR/apigee-mirror.log

mkdir -p $RUN_DIR $LOG_DIR
chown -R vcap:vcap $RUN_DIR $LOG_DIR
chmod -R 777 /var/vcap/sys

touch $DEBUG_LOG
chmod 777 $DEBUG_LOG

# Clean up any /opt/rh directory if its empty
# Will recreate later
if [ -d /opt/rh ]; then
  child_dir=$(ls -A /opt/rh)
  if [ "$child_dir" == "" ]; then
    rm -rf /opt
  fi
fi

if [ ! -d /opt/apigee ]; then
  # Link /opt to /var/vcap/store/apigee/opt
  mkdir -p /var/vcap/store/apigee/opt
  ln -s /var/vcap/store/apigee/opt /

  # Link apigee logs to /var/vcap/sys/log
  mkdir -p /opt/apigee/var/
  ln -s /var/vcap/sys/log /opt/apigee/var/
  sudo mkdir -p /opt/apigee/var/log/apigee-mirror
  sudo mkdir -p /opt/apigee/var/run/apigee-mirror

  # recreate /opt/rh directory back
  mkdir /opt/rh
  chmod -R 777 /var/vcap/store/apigee/opt
fi

sudo sed -i.bak "s/^127.0.0.1 localhost /127.0.0.1 localhost\n${LOCAL_HOST_IP} /1;s/^::1/#::1/" /etc/hosts
sudo rm /etc/hosts.bak

function log_debug() {
  echo `date` $1 >> $DEBUG_LOG
}

